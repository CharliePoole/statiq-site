Title: Family Members
ArchiveSources: family-history/people/*
ArchiveOrderKey: Person
---
<style>
    .container { max-width: 100%; }
    #content { background: #e6f2ff; width: auto; border: 0; }
</style>

<p class="comment">
    This page is still under construction. Clicking on any of these cards
    will eventually take you to a page about the named person. However,
    at this time, most of those pages do not yet exist and clicking on the
    card has no effect. Clickable cards show the name in a bold font.
</p>

@{
    var documents = new List<IDocument>();
    var surnames = new List<string>();

    foreach (var doc in Document.GetChildren())
    {
        if (doc.ContainsKey("Person"))
        {
            documents.Add(doc);
            var name = doc.GetString("Person");
            int comma = name.IndexOf(',');
            if (comma > 0)
            {
                var surname = name.Substring(0, comma);
                if (!surnames.Contains(surname))
                    surnames.Add(surname);
            }
        }
    }
}

<div style="display: flex; justify-content: center; flex-wrap: wrap;">

@foreach (var doc in documents)
{
    string link = Context.GetLink(doc);
    string name = doc.GetString("Person");
    bool living = doc.GetBool("Living");
    bool hasData = !string.IsNullOrEmpty(doc.GetString("Excerpt"));

    string birth = FormatDate(doc.GetString("Birth"));
    if (string.IsNullOrEmpty(birth))
        birth = "??";

    string death = FormatDate(doc.GetString("Death"));
    if (string.IsNullOrEmpty(death))
        death = living ? "Living" : "??";

    if (hasData)
    {
        <div class="card family-member">
            <b><a class="stretched-link" href="@link">@name</a></b>
            <br>
        
        @if (living && birth == "??")
        {
            <span>Living</span>
        }
        else
        {
            <span>@birth - @death</span>
        }

        </div>
    }
    else
    {
        <div class="card family-member-nodata">
            @name
            <br>

        @if (living && birth == "??")
        {
            <span>Living</span>
        }
        else
        {
            <span>@birth - @death</span>
        }

        </div>
    }
}

</div>

@functions
{
    string FormatDate(string s)
    {
        DateTime dt;
        if (DateTime.TryParse(s, out dt))
        {
            string[] parts = s.Split(new char[] { ' ', ',', '/' });
            if (parts.Length == 3)
                return dt.ToString("dd MMM yyyy");

            return dt.ToString("MMM yyyy");
        }

        return s;
    }
}

@model IDocument

@{
    IDocument[] topics = new [] { 
        Outputs.Get("technical/index.html"),
        Outputs.Get("family-photos/index.html"),
        Outputs.Get("family-history/index.html")
    };

    bool isTagPage = Model.ContainsKey(Keys.GroupKey);
    string groupKey = Model.GetString(Keys.GroupKey);
}

@{
    const int MAX_TAGS = 20;
    IDocument[] tags = Outputs.Get("tags.html")?.GetChildren().OrderByDescending(x => x.GetChildren().Count()).ToArray();
    int numTags = tags.Length;
    int counter = 0;

    if (numTags > 0)
    {
        <div class="mt-4">
            <h5>Tags</h5>
            @foreach (IDocument tag in tags)
            {
                if (!isTagPage && ++counter > MAX_TAGS) break;

                string badgeStyle = groupKey != null && groupKey.Equals(tag.GetTitle(), StringComparison.OrdinalIgnoreCase) ? "badge-dark" : "badge-light";
                string postCount = tag.GetChildren().Count().ToString();
                <a href="@Context.GetLink(tag)" class="badge @badgeStyle"> @tag.GetTitle() (@postCount)</a>
            }
            @if (!isTagPage && numTags > MAX_TAGS)
            {
                <div class="mt-3">
                    <div class="float-sm-right">
                        <a class="btn btn-sm btn-primary" href="@Context.GetLink(Outputs.Get("tags.html"))" role="button">All Tags <i class="fas fa-angle-double-right"></i></a>
                    </div>
                    <div class="clearfix"></div>
                </div>
            }
        </div>
    }
}

<div class="mt-4">
    <h5>Archive</h5>

    <ul class="nav flex-column mb-4">
        @foreach(IDocument doc in Outputs.Get("posts.html")
            .GetChildren()
            .OrderByDescending(x => x.GetTitle()))
        {
            string badgeStyle = groupKey != null && groupKey.Equals(doc.GetTitle(), StringComparison.OrdinalIgnoreCase) ? "badge-dark" : "badge-light";
            string postCount = doc.GetChildren().Count().ToString();
            <li class="nav-item">
                <a class="badge @badgeStyle" href="@Context.GetLink(doc)">@doc.GetString("Title") (@postCount)</a>
            </li>
        }
    </ul>
</div>
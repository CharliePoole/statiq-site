ArchiveSources: => GetString("PostSources")
ArchiveKey: Tags
ArchiveKeyComparer: => StringComparer.OrdinalIgnoreCase.ToConvertingEqualityComparer()
ArchiveDestination: >
  => GetInt("Index") <= 1 ? $"tags/{NormalizedPath.OptimizeFileName(GetString("GroupKey"))}/index.html" : $"tags/{NormalizedPath.OptimizeFileName(GetString("GroupKey"))}/{GetInt("Index")}.html"
ArchivePageSize: 10
ArchiveOrderKey: Published
ArchiveOrderDescending: true
Title: Tags
Order: 3
IsPage: true
ArchiveTitle: => GetString("GroupKey")
---
@if (Document.ContainsKey(Keys.GroupKey))
{
    <div class="container-sm-height">
        <div class="row row-sm-height">
            <div class="col-md-6 right-border col-sm-height">
                @Html.Partial("/_posts.cshtml", Document)
            </div>
            <div class="col-md-4 mt-4 mt-md-0 col-sm-height">
                @Html.Partial("/_sidebar.cshtml", Document)
            </div>
        </div>
    </div>
}
else
{ 
    @foreach (IDocument tag in Document.GetChildren().OrderByDescending(x => x.GetChildren().Count()))
    {
        string postCount = tag.GetChildren().Count().ToString();
        <a role="button" href="@Context.GetLink(tag)" class="badge badge-light"> @tag.GetTitle() (@postCount)</a>
    }
}